name: CI

on:
  workflow_dispatch:
  push:
    # don't change that since we run tests on our own server
    branches:
      - master
      - develop

jobs:

  orm-postgres:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [ 14.x ]
        postgres-version: [ 10.10 ]
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: npm install
        run: npm install
      - name: Lerna bootstrap
        run: |
          npm run bootstrap -- \
            --scope @deepkit/postgres --scope @deepkit/orm --scope @deepkit/sql \
            --scope @deepkit/orm-integration --scope @deepkit/topsort \
            --scope @deepkit/type --scope @deepkit/core
      - name: Build
        run: ./node_modules/.bin/tsc --build packages/postgres/tsconfig.json
      - name: Test
        run: npm run test packages/postgres/


  orm-mysql:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [ 14.x ]
        mysql-version: [ 8.0 ]
    services:
      mysql:
        image: "mysql:${{ matrix.mysql-version }}"
        options: >-
          --health-cmd "mysqladmin ping --silent"
          -e MYSQL_ALLOW_EMPTY_PASSWORD=yes
          -e MYSQL_DATABASE=default
        ports:
          - "3306:3306"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: npm install
        run: npm install
      - name: Lerna bootstrap
        run: |
          npm run bootstrap -- \
            --scope @deepkit/mysql --scope @deepkit/orm --scope @deepkit/sql \
            --scope @deepkit/orm-integration --scope @deepkit/topsort \
            --scope @deepkit/type --scope @deepkit/core
      - name: Build
        run: ./node_modules/.bin/tsc --build packages/mysql/tsconfig.json
      - name: Test
        run: npm run test packages/mysql/


  orm-sqlite:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: npm install
        run: npm install
      - name: Lerna bootstrap
        run: |
          npm run bootstrap -- \
            --scope @deepkit/sqlite --scope @deepkit/orm --scope @deepkit/sql \
            --scope @deepkit/orm-integration --scope @deepkit/topsort \
            --scope @deepkit/type --scope @deepkit/core
      - name: Build
        run: ./node_modules/.bin/tsc --build packages/sqlite/tsconfig.json
      - name: Test
        run: npm run test packages/mysql/


#  build:
#    runs-on: [ ubuntu-20.04 ]
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#
#      - name: Cache ~/.npm
#        uses: actions/cache@v1
#        with:
#          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
#          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
#
#      - name: Setup
#        run: |
#          node --version
#          npm install
#
#      - name: Lerna bootstrap
#        run: npm run bootstrap
#
#      - name: Build
#        run: npm run build
#
#      - name: Test
#        run: npm run test
#        env:
#          MYSQL_PW: root
